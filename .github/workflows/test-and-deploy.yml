name: Test and Deploy

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.23.1"

      - name: Install dependencies
        run: go mod download

      - name: Run tests
        run: go test -v ./...

      - name: Generate coverage report
        run: go test -coverprofile=coverage.out ./...

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage.out

  deploy:
    name: Deploy to Fly.io
    needs: test
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    concurrency: deploy-group
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "22.5.1"

      - name: Install dependencies
        run: npm install

      - name: Build frontend
        run: npm run build

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.23.1"

      - name: Install musl-gcc
        run: sudo apt-get update && sudo apt-get install -y musl-tools

      - name: Build Go application with musl
        run: CGO_ENABLED=1 GOOS=linux GOARCH=amd64 CC="musl-gcc" go build -o main .

      - name: Setup Fly CLI
        uses: superfly/flyctl-actions/setup-flyctl@master

      - name: Set secrets
        run: flyctl secrets set GMAIL_USER="${{ secrets.GMAIL_USER }}" GMAIL_PASS="${{ secrets.GMAIL_PASS }}"
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

      - name: Deploy to Fly.io
        run: flyctl deploy --remote-only
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
